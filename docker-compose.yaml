version: "3.8"
services:

  service-discovery:
    build: apps/service-discovery
    image: bsuir-hrm-dataanlyzer-service-discovery
    ports:
      - "8761:8761"
      - "5555"
    environment:
      - JAVA_TOOL_OPTIONS=${DEBUG_OPTIONS}
    restart: always

  data-extractor:
    build: apps/data-extractor
    image: bsuir-hrm-dataanlyzer-data-extractor
    ports:
      - "8080:8080"
      - "5555"
    environment:
      - JAVA_TOOL_OPTIONS=${DEBUG_OPTIONS}
    depends_on:
      - service-discovery
    restart: always

  service-product:
    build: apps/service-product
    image: bsuir-hrm-dataanlyzer-service-product
    ports:
      - "8081:8080"
      - "5555"
    environment:
      - JAVA_TOOL_OPTIONS=${DEBUG_OPTIONS}
    depends_on:
      - service-discovery
      - data-extractor
    restart: always

  service-processing:
    build: apps/service-processing
    image: bsuir-hrm-dataanlyzer-service-processing
    ports:
      - "8082:8080"
      - "5555"
    environment:
      - JAVA_TOOL_OPTIONS=${DEBUG_OPTIONS}
    depends_on:
      - service-discovery
      - service-product
    restart: always

  service-desktop:
    build: apps/service-desktop
    image: bsuir-hrm-dataanlyzer-service-desktop
    ports:
      - "8083:8080"
      - "5555"
    environment:
      - JAVA_TOOL_OPTIONS=${DEBUG_OPTIONS}
    depends_on:
      - service-discovery
    restart: always

  service-gateway:
    build: apps/service-gateway
    image: bsuir-hrm-dataanlyzer-service-gateway
    ports:
      - "8084:8080"
      - "5555"
    environment:
      - JAVA_TOOL_OPTIONS=${DEBUG_OPTIONS}
    depends_on:
      - service-discovery
      - service-product
      - service-desktop
      - service-processing
    restart: always

  service-tenant:
    build: apps/service-tenant
    image: bsuir-hrm-dataanlyzer-service-tenant
    expose:
      - "8080"
    ports:
      - "5555"
    environment:
      - JAVA_TOOL_OPTIONS=${DEBUG_OPTIONS}
    depends_on:
      - service-discovery
    restart: always

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    volumes:
      - "grafana:/var/lib/grafana"

  prometheus:
    image: prom/prometheus:v2.48.0
    ports:
      - "9090:9090"
    volumes:
      - "./config/prometheus.yaml:/etc/prometheus/prometheus.yml" # target file must be .yml not .yaml

volumes:
  grafana:
